{"ast":null,"code":"var _jsxFileName = \"/home/shomey/Documents/code/flatiron/projects/pm2/src/components/Game/Checker/Testanswer/Testanswer.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport './Testanswer.css';\nimport Global from '../../../Global.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rnote = _ref => {\n  _s();\n\n  let {\n    handleDataFromGame\n  } = _ref;\n  const [note, setNote] = useState(Global.notes[Math.floor(Math.random() * Global.notes.length)]);\n  console.log(\"Note: \", note); // const handleClick = () => {\n  //     setNote(\n  //         Global.notes[Math.floor(Math.random() * Global.notes.length)],\n  //     )        \n  // }\n  //If Answer is Correect, change note after 1 second then make state empty.\n  //If Answer incorrect, change keep note same then make state empty after 1 second. \n  // const checkCorrect = () => {\n  //     console.log(\"userAnswer in Answer: \", userAnswer)\n  // }\n  // console.log(\"userAnswer in Answer: \", userAnswer)\n\n  handleDataFromGame(note); // useEffect(()=>{\n  //     handleDataFromGame(note)\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: note\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rnote, \"7HOTA+tDyHu0A/HB8DIvZp2Gbpg=\");\n\n_c = Rnote;\nexport default Rnote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rnote\");","map":{"version":3,"sources":["/home/shomey/Documents/code/flatiron/projects/pm2/src/components/Game/Checker/Testanswer/Testanswer.js"],"names":["React","useState","useEffect","Global","Rnote","handleDataFromGame","note","setNote","notes","Math","floor","random","length","console","log"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,kBAAP;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,KAAK,GAAG,QAEL;AAAA;;AAAA,MADL;AAACC,IAAAA;AAAD,GACK;AACL,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAC5BE,MAAM,CAACK,KAAP,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,MAAM,CAACK,KAAP,CAAaI,MAAxC,CAAb,CAD4B,CAAhC;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,IAAtB,EAJK,CAKL;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAD,EAAAA,kBAAkB,CAACC,IAAD,CAAlB,CAjBK,CAmBL;AACA;AACA;;AAIA,sBACI;AAAA,cAEMA;AAFN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCD;;GAAMF,K;;KAAAA,K;AAkCN,eAAeA,KAAf","sourcesContent":["import {React, useState, useEffect} from 'react'\n\nimport './Testanswer.css'\n\nimport Global from '../../../Global.js'\n\nconst Rnote = (\n    {handleDataFromGame}\n    ) => {\n    const [note, setNote] = useState(\n        Global.notes[Math.floor(Math.random() * Global.notes.length)]\n    )\n    console.log(\"Note: \", note)\n    // const handleClick = () => {\n    //     setNote(\n    //         Global.notes[Math.floor(Math.random() * Global.notes.length)],\n    //     )        \n    // }\n    \n    //If Answer is Correect, change note after 1 second then make state empty.\n    //If Answer incorrect, change keep note same then make state empty after 1 second. \n    // const checkCorrect = () => {\n    //     console.log(\"userAnswer in Answer: \", userAnswer)\n    // }\n    // console.log(\"userAnswer in Answer: \", userAnswer)\n    handleDataFromGame(note)\n\n    // useEffect(()=>{\n    //     handleDataFromGame(note)\n    // })\n\n\n\n    return (\n        <div \n            // onClick={handleClick}\n            >{note}</div>\n    )\n}\n\nexport default Rnote"]},"metadata":{},"sourceType":"module"}